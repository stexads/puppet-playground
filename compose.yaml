---
services:
  # puppetserver
  openvoxserver:
    image: ghcr.io/openvoxproject/openvoxserver:latest
    hostname: puppet
    container_name: puppetserver
    environment:
      OPENVOXSERVER_HOSTNAME: puppet
      # duration Puppet Server waits before reloading code from disk
      OPENVOXSERVER_ENVIRONMENT_TIMEOUT: 0
      CSR_ATTRIBUTES: '{"custom_attributes": { "challengePassword": "foobar" }, "extension_requests": { "pp_project": "foo" } }'
    volumes:
      - openvoxserver:/opt/puppetlabs/server/data/puppetserver:Z
      - openvoxserver-ssl:/etc/puppetlabs/puppet/ssl:Z
      - openvoxserver-ca:/etc/puppetlabs/puppetserver/ca:Z
      - openvox-code:/etc/puppetlabs/code:Z
      # This will override the 'production' folder in puppetserver-data
      - ./puppet-environments/production:/etc/puppetlabs/code/environments/production:Z
      # r10k
      - ./r10k:/etc/puppetlabs/r10k/:Z
      # Mount entire /etc/puppetlabs/puppet to preserve changes
      - ./puppet-etc:/etc/puppetlabs/puppet:Z
      # Install script (TODO Replace with custum image build)
      - ./startup.sh:/usr/local/bin/startup.sh:Z
      # ssh
      - ./ssh:/root/.ssh/:Z
    post_start:
      - command: bash -c "/usr/local/bin/startup.sh"
    restart: always
    ports:
      - 8140:8140

  openvoxdb:
    image: ghcr.io/openvoxproject/openvoxdb:latest
    container_name: puppetdb
    hostname: openvoxdb
    environment:
      PUPPETDB_FACT_VALUES_LIMIT: 8192
    volumes:
      - openvoxdb:/opt/puppetlabs/server/data/puppetdb:Z
    restart: always
    depends_on:
      openvoxserver:
#        condition not supported in podman
#        condition: service_healthy
        restart: true
    ports:
      - 8081:8081

  postgres:
    image: docker.io/postgres:17-alpine
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_DB=openvoxdb
      - POSTGRES_USER=openvoxdb
      - POSTGRES_PASSWORD=openvoxdb
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U openvoxdb -d openvoxdb'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data:Z
      # use /container-entrypoint.d/ instead...
      - ./postgres-init:/docker-entrypoint-initdb.d:Z
    restart: always

  # puppetboard
  puppetboard:
    image: ghcr.io/voxpupuli/puppetboard:latest
    container_name: puppetboard
    hostname: puppetboard
    environment:
      - PUPPETDB_HOST=openvoxdb
      # - PUPPETDB_PORT=8081 # use this for TLS
      - PUPPETDB_PORT=8080  # Use this for non-TLS
      - PUPPETBOARD_PORT=8088
      - SECRET_KEY=628c4e02daaaca2b90242491f607d3704153d424f215ac51b1dd873055e102a5  # Long random String : python3 -c 'import secrets; print(secrets.token_hex())'
      # if you wanna use SSL, you need to provide the following variables
      # see the README.md for more information, look for "Generate additional certificates"
    #   - PUPPETDB_SSL_VERIFY=/etc/puppetlabs/puppet/ssl/certs/ca.pem
    #   - PUPPETDB_KEY=/etc/puppetlabs/puppet/ssl/private_keys/puppetboard.pem
    #   - PUPPETDB_CERT=/etc/puppetlabs/puppet/ssl/certs/puppetboard.pem
    # volumes:
    #   - puppetserver-ssl:/etc/puppetlabs/puppet/ssl:Z
    restart: always
    depends_on:
      openvoxdb:
#        condition not supported in podman
#        condition: service_healthy
        restart: true
    ports:
      - 8088:8088


networks:
  default:
    name: crafty-oss

volumes:
  openvoxserver:
  openvoxserver-ssl:
  openvoxserver-ca:
  openvox-code:
  openvoxdb:
  postgres-data:
